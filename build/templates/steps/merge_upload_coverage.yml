steps:
  - template: initialization.yml
    parameters:
      workingDirectory: $(Build.SourcesDirectory)
      compile: 'false'

  # Download previously generated coverage artifacts
  - task: DownloadPipelineArtifact@2
    inputs:
      patterns: '**/.nyc_output/**'
    displayName: 'Download .nyc_output coverage artifacts'
    condition: always()

  # Now that we have downloaded artifacts from `coverage-output-`, copy them
  #   into the root directory (they'll go under `.nyc_output/...`)
  # These are the coverage output files that can be merged and then we can generate a report from them.
  # This step results in downloading all individual `./nyc_output` results in coverage
  #   from all different test outputs.
  # Running the process of generating reports, will result in generation of
  #   reports from all coverage data, i.e. we're basically combining all to generate a single merged report.
  - bash: |
      cp -r $(Pipeline.Workspace)/coverage-output-*/.nyc_output/ ./
      cd .nyc_output/
      ls -dlU .*/ */
      ls
    displayName: 'Copy ./.nyc_output'
    condition: always()

  - template: generate_upload_coverage.yml
